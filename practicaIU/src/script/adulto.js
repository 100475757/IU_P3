
// MENU HAMBURGUESA  
function toggleMenu() {
    const navLinks = document.querySelector('.nav-links');
    navLinks.classList.toggle('active');
}

//CONTADOR DE LA PORTADA
function startCountdown() {
    const targetDate = new Date('December 25, 2024 00:00:00').getTime();

    const interval = setInterval(() => {
        const currentDate = new Date().getTime();
        const remainingTime = targetDate - currentDate;

        if (remainingTime < 0) {
            clearInterval(interval);
            document.getElementById('countdown').innerText = "¬°HO HO HO Feliz Navidad!";
            return;
        }

        const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));
        const hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);

        document.getElementById('countdown').innerText = `${days}d ${hours}h ${minutes}m ${seconds}s`;
    }, 1000);
}

startCountdown(); // Iniciar la cuenta atr√°s al cargar la p√°gina

// JS DE LA PAGINA WEB
document.addEventListener('DOMContentLoaded', () => {

   
    const logoutButton = document.querySelector('.logout a');

    
    if (logoutButton) {
        logoutButton.addEventListener('click', function (event) {
            event.preventDefault(); 

            
            const confirmLogout = confirm("¬øEst√°s seguro de que quieres cerrar sesi√≥n?");

            if (confirmLogout) {
                
                localStorage.removeItem('currentUser');

                
                alert("Se ha cerrado sesi√≥n correctamente.");
                window.location.href = '../index.html';
            } else {
                
                alert("Se ha cancelado el cerrar sesi√≥n.");
            }
        });
    } else {
        console.error("No se encontr√≥ el enlace de cierre de sesi√≥n dentro de '.logout'.");
    }


    

    const navLinks = document.querySelectorAll('.nav-links a');
    navLinks.forEach(link => {
        link.addEventListener('click', () => {
            const navMenu = document.querySelector('.nav-links');
            navMenu.classList.remove('active'); // Cerrar el men√∫ hamburguesa
        });
    });

    // Funci√≥n para la historia
    const cuentos = [
        document.querySelector('.portada'), 
        document.querySelector('.cuento1'),
        document.querySelector('.cuento2'),
        document.querySelector('.cuento3')
    ];
    let currentIndex = 0;

    
    function mostrarCuento(index) {
        cuentos.forEach((cuento, i) => {
            cuento.classList.remove('active'); // Quitar la clase activa
            if (i === index) {
                cuento.classList.add('active'); // Agregar la clase activa
            }
        });
    }

    
    mostrarCuento(currentIndex);

    // Funci√≥n para pasar a la siguiente p√°gina
    function pasarPagina() {
        if (currentIndex < cuentos.length - 1) {
            currentIndex++;
            mostrarCuento(currentIndex);
        }
    }

    // Funci√≥n para volver a la p√°gina anterior
    function volverPagina() {
        if (currentIndex > 0) {
            currentIndex--;
            mostrarCuento(currentIndex);
        }
    }

    
    document.querySelector('.pasar-pagina').addEventListener('click', pasarPagina);
    document.querySelector('.volver-pagina').addEventListener('click', volverPagina);


    // Ajuste del mapa interactivo al encontrar la posici√≥n de papa noel
    const modal = document.getElementById('modal-mapa');
    const modalClose = document.getElementById('modal-mapa-close');

    
    const finlandia = document.querySelector('.Finlandia');
    if (finlandia) {
        finlandia.addEventListener('click', function () {
            modal.style.display = 'flex';
        });
    }

   
    if (modalClose) {
        modalClose.addEventListener('click', function () {
            modal.style.display = 'none';
        });
    }

    // Funci√≥n para mostrar el mensaje personalizado
    const currentUserData = localStorage.getItem('currentUser');
    let nombre = "";

    if (currentUserData) {
        try {
            const currentUser = JSON.parse(currentUserData);
            if (currentUser && currentUser.name) {
                nombre = currentUser.name; 
            }
        } catch (error) {
            console.error("Error parsing currentUser data from localStorage:", error);
        }
    }

    // Mensaje personalizado
    const mensajePersonalizado = document.getElementById('mensajePersonalizado');

    if (mensajePersonalizado) {
        if (nombre) {
            mensajePersonalizado.innerHTML = `Querido ${nombre}, <br>¬°Estoy emocionado hasta la punta de mi gorro por la posibilidad de verte muy pronto! La magia de la Navidad no estar√≠a completa sin un encuentro especial contigo. ¬øTe animas a venir a mi taller en el Polo Norte para conocerme?

Podemos hablar de tus sue√±os, tus aventuras, ¬°y tal vez hasta compartir unas galletas con leche! Mi trineo est√° listo, los renos est√°n ansiosos, y yo tengo muchas historias m√°gicas para contarte.

¬øQu√© dices? Ven a verme, y juntos viviremos un momento inolvidable lleno de esp√≠ritu navide√±o. <br>¬°Te espero con mucha ilusi√≥n! üéÅüéÑ

Con cari√±o y un gran "ho, ho,¬†ho",
Pap√°¬†Noel`;
        } else {
            mensajePersonalizado.innerHTML = "¬°Hola! Soy Pap√° Noel y me alegra mucho que est√©s aqu√≠. Espero que sigas disfrutando de la magia de la Navidad y encuentres en esta √©poca un momento especial para reflexionar, compartir y conectar con tus seres queridos. ¬°La Navidad es un momento para todos, grandes y peque√±os, de celebrar juntos!";
        }
    } else {
        console.error("No se encontr√≥ el elemento con id 'mensajePersonalizado'");
    }


    // Funci√≥n para evaluar el comportamiento del ni√±o/ni√±a
    document.getElementById('evaluarTest').addEventListener('click', function(event) {
        event.preventDefault(); // Evita que el formulario se env√≠e

        const respuestas = document.querySelectorAll('#formularioTest input[type="radio"]:checked');
        const modalMessage = document.getElementById('modal-message');
        const modal = document.getElementById('modal');

        if (respuestas.length < 6) {
            alert("Por favor, responde todas las preguntas.");
            return;
        }

        let respuestasPositivas = 0;
        respuestas.forEach(respuesta => {
            if (respuesta.value === "si") {
                respuestasPositivas++;
            }
        });

        if (respuestasPositivas >= 4) {
            modalMessage.textContent = "¬°Enhorabuena! Este a√±o has demostrado ser una persona admirable. Pap√° Noel est√° encantado con tu actitud y te espera para compartir juntos un momento lleno de magia y esp√≠ritu navide√±o.";
        } else {
            modalMessage.textContent = "Todos tenemos √°reas en las que podemos mejorar. Pap√° Noel conf√≠a en que seguir√°s creciendo y haciendo lo mejor posible para convertir cada d√≠a en algo especial. ¬°√Ånimo para el pr√≥ximo a√±o!";
        }        

        modal.style.display = 'flex';
    });

    document.getElementById('modal-close').addEventListener('click', function() {
        document.getElementById('modal').style.display = 'none';
    });






    //CARRITO DE LA COMPRA
    

    // Variables para el carrito
    const cartNav = document.getElementById('cart-nav');
    const cartItems = []; // Almacenar los productos en el carrito
    
    // Funci√≥n para a√±adir productos al carrito
    function addToCart(productName) {
        cartItems.push(productName); // A√±adir el producto al array
        
        updateCart();

        //Verificar si el modal est√° abierto y actualizarlo
        if (cartModal.style.display === 'block') {
            showCartModal();    
        }
    }

    // Si le damos al bot√≥n "Comprar" de cada producto
    document.querySelectorAll('.add-to-cart').forEach(button => {
        button.addEventListener('click', () => {
            const productName = button.getAttribute('data-product');
            addToCart(productName);
        });
    });


    //Modal para abrir y cerrar el  carrito
    // Referencias a los elementos del carrito
    const cartModal = document.getElementById('cart-modal');
    const cartModalItems = document.getElementById('cart-modal-items');
    const closeCartBtn = document.getElementById('close-cart');

    // Funci√≥n para abrir el modal del carrito
    function showCartModal() {
        // Limpiar la lista de productos antes de actualizar
        cartModalItems.innerHTML = '';

        // A√±adir cada producto del carrito al modal
        cartItems.forEach(product => {
            const li = document.createElement('li');
            li.textContent = product;
            
            // A√±adir bot√≥n para eliminar este producto
            const removeBtn = document.createElement('span');
            removeBtn.textContent = '‚úñ';
            removeBtn.classList.add('remove-item');
            removeBtn.addEventListener('click', () => removeItemFromCart(product));

            li.appendChild(removeBtn);
            cartModalItems.appendChild(li);
        });

        // Mostrar el modal
        cartModal.style.display = 'block';
    }

    // Funci√≥n para cerrar el modal del carrito
    function closeCartModal() {
        cartModal.style.display = 'none';
    }

    // Evento para mostrar el modal del carrito al hacer clic en el bot√≥n del carrito
    document.getElementById('cart-emoticon').addEventListener('click', showCartModal);

    // Evento para cerrar el modal al hacer clic en el bot√≥n "Cerrar"
    closeCartBtn.addEventListener('click', closeCartModal);

    // Bot√≥n para vaciar el carrito
    const emptyCartBtn = document.getElementById('empty-cart');

    // Funci√≥n para vaciar todo el carrito
    function emptyCart() {
        // Mostrar mensaje de confirmaci√≥n
        const isConfirmed = confirm("¬øEst√°s seguro de que deseas vaciar todo el carrito?");
        
        if (isConfirmed) {
            // Si el usuario confirma, vaciar el carrito
            cartItems.length = 0; // Vaciar el array
            updateCart(); // Actualizar el estado del carrito
            closeCartModal(); // Cerrar el modal
            alert("El carrito ha sido vaciado correctamente."); // Mensaje de √©xito
        } else {
            // Si el usuario cancela
            alert("Se cancel√≥ la acci√≥n de vaciar el carrito.");
        }
    }

    // Funci√≥n para eliminar un producto espec√≠fico
    function removeItemFromCart(productName) {        
        const index = cartItems.indexOf(productName); // Buscar el √≠ndice del producto
        if (index > -1) {
            cartItems.splice(index, 1); // Eliminar el producto del array
        }
            
        updateCart(); // Actualizar el estado del carrito

        if (cartItems.length === 0) {  
            closeCartModal();
        } else {
            showCartModal(); // Refrescar el modal para reflejar los cambios
        }
    } 
    
    // Evento para vaciar todo el carrito
    emptyCartBtn.addEventListener('click', emptyCart);

    // Actualizar la funci√≥n showCartModal para a√±adir el bot√≥n de eliminar productos
    function showCartModal() {
        // Limpiar la lista de productos antes de actualizar
        cartModalItems.innerHTML = '';

        //contar la cantidad de productos
        const productCounts = {};
        cartItems.forEach(product => {
           productCounts[product] = (productCounts[product] || 0) + 1;
        });   
        
        // A√±adir cada producto del carrito al modal 
        Object.keys(productCounts).forEach(product => {
            const li = document.createElement('li');
            li.textContent = `${product} x ${productCounts[product]}`;

            // A√±adir bot√≥n para eliminar este producto
            const removeBtn = document.createElement('span');
            removeBtn.textContent = '‚úñ';
            removeBtn.classList.add('remove-item');
            removeBtn.addEventListener('click', () => removeItemFromCart(product));

            li.appendChild(removeBtn);
            cartModalItems.appendChild(li);
        });

        // Mostrar el modal
        cartModal.style.display = 'block';
    }

    // Actualizar la funci√≥n updateCart para manejar la visibilidad del carrito
    function updateCart() {
        const cartCounter = document.getElementById('cart-counter');
        const cartNav = document.getElementById('cart-nav');
        
        if (cartItems.length > 0) {
            // Mostrar el carrito
            cartNav.style.display = 'flex';
            if (cartCounter) {
                cartCounter.textContent = cartItems.length;
            } 
        } else {
            // Ocultar el carrito si no hay productos
            cartNav.style.display = 'none';
            if (cartCounter){
                cartCounter.textContent = '';
            }
        }
    }

    // Referencia al bot√≥n de compra
    const checkoutCartBtn = document.getElementById('checkout-cart');

    // Funci√≥n para manejar la compra
    function checkoutCart() {
        if (cartItems.length === 0) {
            alert("El carrito est√° vac√≠o. A√±ade productos antes de comprar."); // Prevenir compras vac√≠as
            return;
        }

        // Mostrar mensaje de agradecimiento
        alert("Ho Ho Ho. Gracias por comprar!! Yo mismo te entregar√© tu pedido. ¬°Feliz Navidad!");

        // Vaciar el carrito
        cartItems.length = 0; // Vaciar el array
        updateCart(); // Actualizar el carrito en la barra de navegaci√≥n
        closeCartModal(); // Cerrar el modal
    }

    // Asociar el evento al bot√≥n "Comprar"
    checkoutCartBtn.addEventListener('click', checkoutCart);


});
